-- from https://github.com/nvimdev/dashboard-nvim/wiki/Ascii-Header-Text
local header_2 = {
  "",
  "     ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°¥‚†û‚†â‚¢â‚£≠‚£ø‚£ø‚†ø‚£≥‚£§‚†¥‚†ñ‚†õ‚£õ‚£ø‚£ø‚°∑‚†ñ‚£∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä  ",
  "   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£º‚†Å‚¢Ä‚£∂‚¢ª‚°ü‚†ø‚†ã‚£¥‚†ø‚¢ª‚£ß‚°¥‚†ü‚†ã‚†ø‚†õ‚††‚†æ‚¢õ‚£µ‚£ø‚†Ä‚†Ä‚†Ä‚†Ä  ",
  "   ‚£º‚£ø‚°ø‚¢∂‚£Ñ‚†Ä‚¢Ä‚°á‚¢Ä‚°ø‚†Å‚†à‚†Ä‚†Ä‚£Ä‚£â‚£Ä‚†ò‚£ø‚†Ä‚†Ä‚£Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†õ‚°π‚†ã‚†Ä‚†Ä‚†Ä‚†Ä  ",
  "   ‚£≠‚£§‚°à‚¢ë‚£º‚£ª‚£ø‚£ß‚°å‚†Å‚†Ä‚¢Ä‚£¥‚†ü‚†ã‚†â‚†â‚†õ‚£ø‚£¥‚†ü‚†ã‚†ô‚†ª‚£¶‚°∞‚£û‚†Å‚¢Ä‚£§‚£¶‚£§‚†Ä  ",
  "   ‚†Ä‚†Ä‚£∞‚¢´‚£æ‚†ã‚£Ω‚†ü‚†ë‚†õ‚¢†‚°ü‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚°Ñ‚†Ä‚†Ä‚†Ä‚†ò‚£∑‚°à‚†ª‚£ç‚†§‚¢§‚£å‚£Ä  ",
  "   ‚¢Ä‚°û‚£°‚°å‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚°Ä‚†Ä‚†Ä‚†Ä‚†∏‚£á‚†Ä‚¢æ‚£∑‚¢§‚£¨‚£â  ",
  "   ‚°û‚£º‚£ø‚£§‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†∏‚£ø‚£á‚†à‚†ª  ",
  "   ‚¢∞‚£ø‚°ø‚¢π‚†É‚†Ä‚£†‚†§‚†∂‚£º‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚†Ä‚†Ä‚£ø‚†õ‚°Ñ‚†Ä  ",
  "   ‚†à‚†â‚†Å‚†Ä‚†Ä‚†Ä‚°ü‚°Ä‚†Ä‚†à‚°ó‚†≤‚†∂‚†¶‚¢§‚£§‚£§‚£Ñ‚£Ä‚£Ä‚£∏‚£ß‚£§‚£§‚†§‚†§‚£ø‚£Ä‚°Ä‚†â‚£º‚°á‚†Ä  ",
  "   ‚£ø‚£¥‚£¥‚°Ü‚†Ä‚†Ä‚†ª‚£Ñ‚†Ä‚†Ä‚†°‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†ã‚†Ä‚†Ä‚†Ä‚°à‚†Ä‚†ª‚†ü‚†Ä‚¢Ä‚†ã‚†â‚†ô‚¢∑‚°ø‚°á‚†Ä  ",
  "   ‚£ª‚°ø‚†è‚†Å‚†Ä‚†Ä‚¢†‚°ü‚†Ä‚†Ä‚†Ä‚†£‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚†à‚†Ä‚¢Ä‚£Ä‚°æ‚£¥‚†É‚†Ä  ",
  "   ‚¢ø‚†õ‚†Ä‚†Ä‚†Ä‚†Ä‚¢∏‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†¢‚†Ñ‚£Ä‚††‚†º‚£Å‚†Ä‚°±‚†§‚†§‚†ê‚†Å‚†Ä‚†Ä‚£∏‚†ã‚¢ª‚°ü‚†Ä‚†Ä  ",
  "   ‚†à‚¢ß‚£Ä‚£§‚£∂‚°Ñ‚†ò‚£Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£§‚†ñ‚†õ‚†ª‚£Ñ‚†Ä‚†Ä‚†Ä‚¢Ä‚£†‚°æ‚†ã‚¢Ä‚°û‚†Ä‚†Ä‚†Ä  ",
  "   ‚†Ä‚†Ä‚†ª‚£ø‚£ø‚°á‚†Ä‚†à‚†ì‚¢¶‚£§‚£§‚£§‚°§‚†û‚†â‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†õ‚†í‚†ö‚¢©‚°Ö‚£†‚°¥‚†ã‚†Ä‚†Ä‚†Ä‚†Ä  ",
  "   ‚†Ä‚†Ä‚†Ä‚†à‚†ª‚¢ß‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ê‚£ª‚†ø‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä  ",
  "   ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ì‚†∂‚£§‚£Ñ‚£Ä‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£Ä‚£†‚°¥‚†ñ‚†ã‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä  ",
  "",
  "",
}

return {
  {
    "catppuccin/nvim",
    name = "catppuccin",
    priority = 1000,
    lazy = false,
    config = function()
      vim.cmd.colorscheme "catppuccin-macchiato"
    end,
  },
  {
    "nvim-lualine/lualine.nvim",
    lazy = false,
    dependencies = {
      "SmiteshP/nvim-navic",
    },
    config = function()
      local lualine = require "lualine"
      local navic = require "nvim-navic"
      local navic_part = {
        function()
          return navic.get_location()
        end,
        cond = navic.is_available,
      }

      lualine.setup {
        options = {
          icons_enabled = true,
          component_separators = "|",
          section_separators = "",
        },
        sections = {
          lualine_a = {},
          lualine_b = { "branch", "diff", "diagnostics" },
          lualine_c = {
            navic_part,
          },
          lualine_x = { "" },
          lualine_y = {},
          -- TODO: make this configurable from local config
          -- for some reason, this slows neovim down considerably on macos
          -- lualine_y = { "filetype" },
          lualine_z = { "location" },
        },
      }
    end,
  },

  {
    "lukas-reineke/indent-blankline.nvim",
    event = "VeryLazy",
    config = function()
      require("ibl").setup {
        exclude = { filetypes = { "dashboard" } },
      }
    end,
  },

  {
    "akinsho/bufferline.nvim",
    lazy = false,
    config = function()
      require("bufferline").setup {}
    end,
  },
  {
    "nvimdev/dashboard-nvim",
    event = "VimEnter",
    config = function()
      require("dashboard").setup {
        theme = "doom",
        disable_move = true,
        config = {
          header = header_2,
          center = {
            {
              icon = "üöÄ",
              icon_hl = "group",
              desc = " Open Projects",
              desc_hl = "group",
              key = "sp",
              key_hl = "group",
              key_format = " [%s]", -- `%s` will be substituted with value of `key`
              action = function()
                require("telescope").extensions.project.project {}
              end,
            },
            {
              icon = "üë∑",
              icon_hl = "group",
              desc = " Open file in cwd",
              desc_hl = "group",
              key = "sf",
              key_hl = "group",
              key_format = " [%s]", -- `%s` will be substituted with value of `key`
              action = function()
                -- TODO: use find_files if not in a git repo
                require("telescope.builtin").git_files { hidden = true }
              end,
            },
            {
              icon = "üîç",
              icon_hl = "group",
              desc = " Open recent files",
              desc_hl = "group",
              key = "so",
              key_hl = "group",
              key_format = " [%s]", -- `%s` will be substituted with value of `key`
              action = function()
                require("telescope.builtin").oldfiles()
              end,
            },
            {
              icon = "ü§¶",
              icon_hl = "group",
              desc = " Reopen last file",
              desc_hl = "group",
              key = "o",
              key_hl = "group",
              key_format = " [%s]", -- `%s` will be substituted with value of `key`
              action = function()
                vim.cmd [[ e#<1 ]]
              end,
            },
            {
              icon = "üî•",
              icon_hl = "group",
              desc = " Open nvim config",
              desc_hl = "group",
              key = "n",
              key_hl = "group",
              key_format = " [%s]", -- `%s` will be substituted with value of `key`
              action = function()
                require("telescope.builtin").find_files { cwd = vim.fn.stdpath "config" }
              end,
            },
            {
              icon = "üêê",
              icon_hl = "group",
              desc = " Open dotfiles",
              desc_hl = "group",
              key = ".",
              key_hl = "group",
              key_format = " [%s]", -- `%s` will be substituted with value of `key`
              action = function()
                require("telescope.builtin").find_files {
                  cwd = vim.fn.expand "~/.dotfiles",
                  hidden = true,
                }
              end,
            },
          },
          footer = {
            "Startuptime: " .. require("lazy.stats").track "UIEnter" .. " ms",
            "Plugins: "
              .. require("lazy").stats().loaded
              .. " loaded / "
              .. require("lazy").stats().count
              .. " installed",
          },
        },
      }
    end,
    dependencies = { { "nvim-tree/nvim-web-devicons" } },
  },
}
